---
import HamburgerButton from 'src/components/HamburgerButton.astro';
import LanguagePicker from 'src/components/LanguagePicker.astro';
import { getLangFromUrl, useTranslatedPath, useTranslations } from 'src/i18n/utils';
import { slugMap } from 'src/i18n/slug-map';
import { getRelativeLocaleUrl } from 'astro:i18n';

const lang = getLangFromUrl(Astro.url) as 'es' | 'en';
const translatePath = useTranslatedPath(lang);
const t = useTranslations(lang);
---

<section class="nav-container flex flex-col bg-[#f6f6f4] overflow-hidden">
    <!-- Top Bar -->
    <div class="flex justify-between items-center py-5 px-[2%] h-[100px]">
        <!-- Logo -->
        <a href={translatePath("/")} class="pl-3">
            <img src="/logo-oscuro.webp" alt="Logo" class="max-w-32 md:max-w-48">
        </a>
        <!-- Hamburger Button (Mobile Menu) -->
        <HamburgerButton id="hamburgerButton" />
        <!-- Desktop Navigation Links -->
        <nav class="font-overpass font-semibold space-x-6 uppercase text-xs tracking-wide lg:flex hidden">
            <a href={getRelativeLocaleUrl(lang, slugMap['bodas'][lang])}>{t('nav.bodas')}</a>
            <a href={getRelativeLocaleUrl(lang, slugMap['sesiones'][lang])}>{t('nav.sesiones')}</a>
            <a href={getRelativeLocaleUrl(lang, slugMap['sobre-mi'][lang])}>{t('nav.sobre-mi')}</a>
            <a href={getRelativeLocaleUrl(lang, slugMap['contacto'][lang])}>{t('nav.contacto')}</a>
            <a href={getRelativeLocaleUrl(lang, slugMap['precios'][lang])}>{t('nav.precios')}</a>
            <a href={getRelativeLocaleUrl(lang, slugMap['blog'][lang])}>{t('nav.blog')}</a>
            <LanguagePicker />
        </nav>
        <!-- Call to Action Button -->
        <div class="pr-3">
            <a href={translatePath("/contacto")} class="link-button">
                {t('nav.cta')}
            </a>
        </div>
    </div>
    <!-- Mobile Dropdown Menu -->
    <div id="mobileDropdown" class="flex flex-col items-center gap-6 font-overpass font-semibold uppercase text-xs tracking-wide bg-[#f6f6f4] px-6 py-0 max-h-0 overflow-hidden transition-all duration-500 ease-in-out lg:hidden">
        <a href={getRelativeLocaleUrl(lang, slugMap['bodas'][lang])}>{t('nav.bodas')}</a>
        <a href={getRelativeLocaleUrl(lang, slugMap['sesiones'][lang])}>{t('nav.sesiones')}</a>
        <a href={getRelativeLocaleUrl(lang, slugMap['sobre-mi'][lang])}>{t('nav.sobre-mi')}</a>
        <a href={getRelativeLocaleUrl(lang, slugMap['contacto'][lang])}>{t('nav.contacto')}</a>
        <a href={getRelativeLocaleUrl(lang, slugMap['precios'][lang])}>{t('nav.precios')}</a>
        <a href={getRelativeLocaleUrl(lang, slugMap['blog'][lang])}>{t('nav.blog')}</a>
        <LanguagePicker />
    </div>
</section>
<!-- Styling for Mobile Menu Transition -->
<style>
    /* Mobile Menu Transition */
    #mobileMenu {
        display: none;
        opacity: 0;
        transition: opacity 0.3s ease, visibility 0s 0.3s;
    }
    #mobileMenu.open {
        display: flex;
        opacity: 1;
        visibility: visible;
        transition: opacity 0.3s ease;
    }
    /* Hamburger Button active class */
    #hamburgerButton.active + #mobileMenu {
        display: flex;
        opacity: 1;
        visibility: visible;
    }
</style>
<!-- Mobile Menu Script -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const hamburgerButton = document.querySelector('#hamburgerButton')!;
        const mobileDropdown = document.getElementById('mobileDropdown')!;
        hamburgerButton.addEventListener('click', () => {
            if (mobileDropdown.classList.contains('max-h-0')) {
                mobileDropdown.classList.remove('max-h-0', 'py-0');
                mobileDropdown.classList.add('max-h-[500px]', 'py-4');
            } else {
                mobileDropdown.classList.remove('max-h-[500px]', 'py-4');
                mobileDropdown.classList.add('max-h-0', 'py-0');
            }
            hamburgerButton.classList.toggle('active');
        });
    });
</script>