---
import { getLangFromUrl, useTranslations } from "src/i18n/utils";

const lang = getLangFromUrl(Astro.url) as "es" | "en";
const t = useTranslations(lang);

// OJO: en tu ui.ts guarda los "details" como JSON.stringify([...])
// y aquí los parseamos para tener arrays reales.
const slides = [
  {
    title: t("photoshoots.parejas.mini.title"),
    description: t("photoshoots.parejas.mini.description"),
    details: JSON.parse(t("photoshoots.parejas.mini.details")),
    price: t("photoshoots.parejas.mini.price"),
  },
  {
    title: t("photoshoots.parejas.reportaje.title"),
    description: t("photoshoots.parejas.reportaje.description"),
    details: JSON.parse(t("photoshoots.parejas.reportaje.details")),
    price: t("photoshoots.parejas.reportaje.price"),
  },
  {
    title: t("photoshoots.parejas.experiencia.title"),
    description: t("photoshoots.parejas.experiencia.description"),
    details: JSON.parse(t("photoshoots.parejas.experiencia.details")),
    price: t("photoshoots.parejas.experiencia.price"),
  },
];
---
<section class="bg-cover bg-no-repeat py-24 bg-center mt-24" style="background-image: url('/img/25.webp'), linear-gradient(90deg, rgba(255,255,255,0.65) 50%, #ffffff 50%); background-blend-mode: overlay;">
  <div class="max-w-7xl mx-auto">
    <section class="grid grid-cols-1 md:grid-cols-3 gap-10 p-8">
      <div class="flex justify-center items-start">
        <img src="/img/5.webp" alt="Ariadna" class="w-full h-auto">
      </div>

      <div>
        <h2 class="uppercase">{t('photoshoots.parejas.h2')}</h2>
        <img src="/img/31.webp" alt="Ariadna" class="w-full h-auto">
      </div>

      <div class="flex flex-col justify-center items-center text-sm">
        <div class="relative w-full max-w-3xl h-auto">
          <!-- Slides -->
          <!-- Pasamos las traducciones al script via data-slides -->
          <div
            class="slider"
            id="slider-parejas"
            data-slides={JSON.stringify(slides)}
          ></div>

          <a href="#contactForm" class="link-button mt-8">
            {t('photoshoots.parejas.button')}
          </a>

          <!-- Navigation Arrows -->
          <button class="absolute top-1/2 left-2 transform -translate-y-1/2" id="prevParejas" aria-label="Anterior">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#222" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-chevron-left"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 6l-6 6l6 6" /></svg>
          </button>
          <button class="absolute top-1/2 right-2 transform -translate-y-1/2" id="nextParejas" aria-label="Siguiente">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#222" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-chevron-right"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 6l6 6l-6 6" /></svg>
          </button>
        </div>
      </div>
    </section>
  </div>
</section>

<style>
  .slider {
    position: relative;
    width: 100%;
    height: auto;
    overflow: hidden;
  }
  .slider .fade {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    display: none;
  }
  .slider .active {
    opacity: 1;
    display: block;
  }
</style>

<script type="module">
  // 1) Recogemos los slides (ya traducidos) desde el data-attribute
  const sliderParejas = document.getElementById("slider-parejas");
  const raw = sliderParejas?.dataset.slides || "[]";
  const slides = JSON.parse(raw);

  // 2) Renderizamos como hacías antes (mismo HTML/CSS/clases)
  slides.forEach((slide) => {
    const slideDiv = document.createElement("div");
    slideDiv.classList.add("fade", "flex", "flex-col", "justify-center", "text-gray-800", "bg-white", "p-4");

    slideDiv.innerHTML = `
      <h3 class="text-5xl">${slide.title}</h3>
      <p class="mt-4">${slide.description}</p>
      <ul class="mt-4">
        ${slide.details.map((detail) => `<li>• ${detail}</li>`).join("")}
      </ul>
      <hr class="my-4 bg-slate-900">
      <p class="font-claster text-4xl">${slide.price}</p>
    `;

    sliderParejas.appendChild(slideDiv);
  });

  // 3) Lógica de slider (igual que la tuya, sin TypeScript en el navegador)
  let currentSlide = 0;

  const slidesElements = sliderParejas.querySelectorAll(".fade");
  slidesElements.forEach((slide, index) => {
    if (index === 0) {
      slide.classList.add("active");
      slide.style.display = "block";
    } else {
      slide.classList.remove("active");
      slide.style.display = "none";
    }
  });

  function showSlide(index) {
    const nodes = sliderParejas.querySelectorAll(".fade");
    nodes[currentSlide].classList.remove("active");
    nodes[currentSlide].style.display = "none";
    currentSlide = (index + nodes.length) % nodes.length;
    nodes[currentSlide].classList.add("active");
    nodes[currentSlide].style.display = "block";
  }

  const prevParejasButton = document.getElementById("prevParejas");
  const nextParejasButton = document.getElementById("nextParejas");

  if (prevParejasButton) {
    prevParejasButton.addEventListener("click", () => showSlide(currentSlide - 1));
  }
  if (nextParejasButton) {
    nextParejasButton.addEventListener("click", () => showSlide(currentSlide + 1));
  }
</script>
